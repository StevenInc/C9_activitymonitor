{"version":3,"sources":["/app/pipes/pipes/timeAgo.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAMA;gBAAA;gBA0BA,CAAC;gBAzBG,+BAAS,GAAT,UAAU,KAAa;oBACnB,IAAI,YAAY,GAAQ,KAAK,CAAC;oBAC9B,IAAI,GAAG,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBACvC,IAAI,MAAM,GAAW,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,2CAA2C;oBACtF,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO;oBAC7D,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,QAAQ;oBACzE,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,UAAU;oBACtF,IAAI,SAAiB,CAAC;oBACtB,EAAE,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;wBACjB,SAAS,GAAG,WAAW,CAAC;oBAC5B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtB,SAAS,GAAG,QAAQ,GAAG,WAAW,CAAC;oBACvC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;wBACvB,SAAS,GAAG,aAAa,CAAC;oBAC9B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrB,SAAS,GAAG,OAAO,GAAG,YAAY,CAAC;oBACvC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;wBACxB,SAAS,GAAG,cAAc,CAAC;oBAC/B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtB,SAAS,GAAG,QAAQ,GAAG,cAAc,CAAC;oBAC1C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,SAAS,GAAG,mBAAmB,CAAC;oBACpC,CAAC;oBACD,MAAM,CAAC,SAAS,CAAC;gBACrB,CAAC;gBA7BL;oBAAC,WAAI,CAAC;wBACF,IAAI,EAAE,SAAS;qBAClB,CAAC;;+BAAA;gBA4BF,kBAAC;YAAD,CA1BA,AA0BC,IAAA;YA1BD,qCA0BC,CAAA","file":"timeAgo.pipe.js","sourcesContent":["import { Pipe, PipeTransform } from 'angular2/core';\n\n@Pipe({\n    name: 'timeAgo'\n})\n\nexport class TimeAgoPipe implements PipeTransform {\n    transform(value: string): string {\n        let activityDate: any = value;\n        let now: number = new Date().getTime();\n        let diffMs: number = (now - activityDate); // milliseconds between now & activity date\n        let diffDays: number = Math.round(diffMs / 86400000); // days\n        let diffHrs: number = Math.round((diffMs % 86400000) / 3600000); // hours\n        let diffMins: number = Math.round(((diffMs % 86400000) % 3600000) / 60000); // minutes\n        let strReturn: string;\n        if (diffDays === 1) {\n            strReturn = 'a day ago';\n        } else if (diffDays > 1) {\n            strReturn = diffDays + ' days ago';\n        } else if (diffHrs === 1) {\n            strReturn = 'an hour ago';\n        } else if (diffHrs > 1) {\n            strReturn = diffHrs + ' hours ago';\n        } else if (diffMins === 1) {\n            strReturn = 'a minute ago';\n        } else if (diffMins > 1) {\n            strReturn = diffMins + ' minutes ago';\n        } else {\n            strReturn = 'a few seconds ago';\n        }\n        return strReturn;\n    }\n}\n\n"]}